$date
	Sun Feb  2 15:23:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder4_sim $end
$var wire 4 ! s [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$scope module a4 $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var wire 4 & s [3:0] $end
$var wire 4 ' c [3:0] $end
$scope module fa0 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + cout $end
$var wire 1 , s $end
$upscope $end
$scope module fa1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$upscope $end
$scope module fa3 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100
b1 !
b1 &
1,
1(
b1 "
b1 $
#200
0,
b10 !
b10 &
11
0(
1-
b10 "
b10 $
#300
1;
19
15
14
b110 '
10
1,
01
b1001 !
b1001 &
06
1)
1.
13
b111 #
b111 %
#400
1/
14
1+
10
0,
01
16
b100 !
b100 &
0;
b1111 '
1:
1(
0-
12
17
b1101 "
b1101 $
#500
11
b10 !
b10 &
06
1-
02
b1011 "
b1011 $
#600
