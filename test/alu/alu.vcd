$date
	Sun Feb  2 16:08:16 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_sim $end
$var wire 16 ! s [15:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$var reg 5 $ f [4:0] $end
$scope module alu $end
$var wire 16 % a [15:0] $end
$var wire 16 & b [15:0] $end
$var wire 5 ' f [4:0] $end
$var wire 16 ( y [15:0] $end
$var wire 16 ) x [15:0] $end
$var wire 16 * s [15:0] $end
$scope function alu $end
$var reg 16 + a [15:0] $end
$var reg 16 , b [15:0] $end
$var reg 5 - f [4:0] $end
$var reg 16 . x [15:0] $end
$var reg 16 / y [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000000000101000 /
b1000000000001010 .
bx -
b101000 ,
b1010 +
bx *
b1000000000001010 )
b1000000000101000 (
bx '
b101000 &
b1010 %
bx $
b101000 #
b1010 "
bx !
$end
#100
b110010 !
b110010 *
b0 -
b0 $
b0 '
#200
b11110 !
b11110 *
b1 -
b1 $
b1 '
#300
b110010000 !
b110010000 *
b10 -
b10 $
b10 '
#400
b1010000000000000 !
b1010000000000000 *
b11 -
b11 $
b11 '
#500
b0 !
b0 *
b100 -
b100 $
b100 '
#600
b1000 !
b1000 *
b101 -
b101 $
b101 '
#700
b101010 !
b101010 *
b110 -
b110 $
b110 '
#800
b1 !
b1 *
b1000 -
b1000 $
b1000 '
#900
b1001 -
b1001 $
b1001 '
#1000
b0 !
b0 *
b1010 -
b1010 $
b1010 '
#1100
b1 !
b1 *
b1011 -
b1011 $
b1011 '
#1200
b0 !
b0 *
b1100 -
b1100 $
b1100 '
#1300
b1 !
b1 *
b1101 -
b1101 $
b1101 '
#1400
b0 !
b0 *
b1110 -
b1110 $
b1110 '
#1500
b1 !
b1 *
b1111 -
b1111 $
b1111 '
#1600
b1111111111110110 !
b1111111111110110 *
b10000 -
b10000 $
b10000 '
#1700
b1111111111110101 !
b1111111111110101 *
b10001 -
b10001 $
b10001 '
#1800
b0 !
b0 *
b10010 -
b10010 $
b10010 '
#1900
