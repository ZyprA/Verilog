$date
	Mon Feb  3 00:01:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module cpu_sim $end
$var wire 16 ! reg_in [15:0] $end
$var wire 16 " reg_b [15:0] $end
$var wire 16 # reg_a [15:0] $end
$var wire 16 $ reg7 [15:0] $end
$var wire 16 % reg6 [15:0] $end
$var wire 16 & reg5 [15:0] $end
$var wire 16 ' reg4 [15:0] $end
$var wire 16 ( reg3 [15:0] $end
$var wire 16 ) reg2 [15:0] $end
$var wire 16 * reg1 [15:0] $end
$var wire 16 + reg0 [15:0] $end
$var wire 15 , p_out [14:0] $end
$var wire 8 - p_count [7:0] $end
$var wire 8 . op_data [7:0] $end
$var wire 4 / op_code [3:0] $end
$var wire 3 0 n_reg_b [2:0] $end
$var wire 3 1 n_reg_a [2:0] $end
$var wire 1 2 clk_wb $end
$var wire 1 3 clk_ft $end
$var wire 1 4 clk_ex $end
$var wire 1 5 clk_dc $end
$var reg 1 6 clk $end
$var reg 1 7 reset $end
$scope module cpuSIM $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 16 8 reg_in [15:0] $end
$var wire 16 9 reg_b [15:0] $end
$var wire 16 : reg_a [15:0] $end
$var wire 16 ; reg7 [15:0] $end
$var wire 16 < reg6 [15:0] $end
$var wire 16 = reg5 [15:0] $end
$var wire 16 > reg4 [15:0] $end
$var wire 16 ? reg3 [15:0] $end
$var wire 16 @ reg2 [15:0] $end
$var wire 16 A reg1 [15:0] $end
$var wire 16 B reg0 [15:0] $end
$var wire 15 C p_out [14:0] $end
$var wire 8 D p_count [7:0] $end
$var wire 8 E op_data [7:0] $end
$var wire 4 F op_code [3:0] $end
$var wire 3 G n_reg_b [2:0] $end
$var wire 3 H n_reg_a [2:0] $end
$var wire 1 2 clk_wb $end
$var wire 1 3 clk_ft $end
$var wire 1 4 clk_ex $end
$var wire 1 5 clk_dc $end
$scope module dc $end
$var wire 15 I p_out [14:0] $end
$var wire 1 5 clk_dc $end
$var reg 4 J op_code [3:0] $end
$var reg 8 K op_data [7:0] $end
$upscope $end
$scope module ex $end
$var wire 4 L op_code [3:0] $end
$var wire 8 M op_data [7:0] $end
$var wire 1 7 reset $end
$var wire 16 N reg_b [15:0] $end
$var wire 16 O reg_a [15:0] $end
$var wire 1 4 clk_ex $end
$var reg 8 P p_count [7:0] $end
$var reg 16 Q reg_in [15:0] $end
$upscope $end
$scope module ft $end
$var wire 8 R p_count [7:0] $end
$var wire 15 S p_out [14:0] $end
$var wire 1 3 clk_ft $end
$scope module pr $end
$var wire 8 T addr [7:0] $end
$var wire 1 3 clk $end
$var reg 15 U q [14:0] $end
$upscope $end
$upscope $end
$scope module rdc1 $end
$var wire 3 V n_reg_in [2:0] $end
$var wire 16 W reg7 [15:0] $end
$var wire 16 X reg6 [15:0] $end
$var wire 16 Y reg5 [15:0] $end
$var wire 16 Z reg4 [15:0] $end
$var wire 16 [ reg3 [15:0] $end
$var wire 16 \ reg2 [15:0] $end
$var wire 16 ] reg1 [15:0] $end
$var wire 16 ^ reg0 [15:0] $end
$var wire 1 5 clk_dc $end
$var reg 3 _ n_reg_out [2:0] $end
$var reg 16 ` reg_out [15:0] $end
$upscope $end
$scope module rdc2 $end
$var wire 3 a n_reg_in [2:0] $end
$var wire 16 b reg7 [15:0] $end
$var wire 16 c reg6 [15:0] $end
$var wire 16 d reg5 [15:0] $end
$var wire 16 e reg4 [15:0] $end
$var wire 16 f reg3 [15:0] $end
$var wire 16 g reg2 [15:0] $end
$var wire 16 h reg1 [15:0] $end
$var wire 16 i reg0 [15:0] $end
$var wire 1 5 clk_dc $end
$var reg 3 j n_reg_out [2:0] $end
$var reg 16 k reg_out [15:0] $end
$upscope $end
$scope module rwb $end
$var wire 3 l n_reg [2:0] $end
$var wire 16 m reg_in [15:0] $end
$var wire 1 7 reset $end
$var wire 1 2 clk_wb $end
$var reg 16 n reg0 [15:0] $end
$var reg 16 o reg1 [15:0] $end
$var reg 16 p reg2 [15:0] $end
$var reg 16 q reg3 [15:0] $end
$var reg 16 r reg4 [15:0] $end
$var reg 16 s reg5 [15:0] $end
$var reg 16 t reg6 [15:0] $end
$var reg 16 u reg7 [15:0] $end
$upscope $end
$scope module st $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 2 clk_wb $end
$var wire 1 3 clk_ft $end
$var wire 1 4 clk_ex $end
$var wire 1 5 clk_dc $end
$var reg 2 v cs [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
17
06
x5
x4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#50
16
#100
b0 -
b0 D
b0 P
b0 R
b0 T
06
07
#150
b0 a
b0 V
b10000000000000 ,
b10000000000000 C
b10000000000000 I
b10000000000000 S
b10000000000000 U
13
05
04
02
b0 v
16
#200
06
17
#250
b0 .
b0 E
b0 K
b0 M
b100 /
b100 F
b100 J
b100 L
b0 1
b0 H
b0 _
b0 l
b0 0
b0 G
b0 j
03
15
b1 v
16
#300
06
#350
b1 -
b1 D
b1 P
b1 R
b1 T
b0xxxxxxxx !
b0xxxxxxxx 8
b0xxxxxxxx Q
b0xxxxxxxx m
05
14
b10 v
16
#400
06
#450
b0xxxxxxxx +
b0xxxxxxxx B
b0xxxxxxxx ^
b0xxxxxxxx i
b0xxxxxxxx n
04
12
b11 v
16
#500
06
#550
b1100000000001 ,
b1100000000001 C
b1100000000001 I
b1100000000001 S
b1100000000001 U
13
02
b0 v
16
#600
06
#650
b0xxxxxxxx "
b0xxxxxxxx 9
b0xxxxxxxx N
b0xxxxxxxx k
b0xxxxxxxx #
b0xxxxxxxx :
b0xxxxxxxx O
b0xxxxxxxx `
b1 .
b1 E
b1 K
b1 M
b11 /
b11 F
b11 J
b11 L
03
15
b1 v
16
#700
06
#750
b10 -
b10 D
b10 P
b10 R
b10 T
b1 !
b1 8
b1 Q
b1 m
05
14
b10 v
16
#800
06
#850
b1 +
b1 B
b1 ^
b1 i
b1 n
04
12
b11 v
16
#900
06
#950
b1 V
b10000100000000 ,
b10000100000000 C
b10000100000000 I
b10000100000000 S
b10000100000000 U
13
02
b0 v
16
#1000
06
#1050
b0 .
b0 E
b0 K
b0 M
b100 /
b100 F
b100 J
b100 L
b1 1
b1 H
b1 _
b1 l
bx #
bx :
bx O
bx `
b1 "
b1 9
b1 N
b1 k
03
15
b1 v
16
#1100
06
#1150
b11 -
b11 D
b11 P
b11 R
b11 T
b0xxxxxxxx !
b0xxxxxxxx 8
b0xxxxxxxx Q
b0xxxxxxxx m
05
14
b10 v
16
#1200
06
#1250
b0xxxxxxxx *
b0xxxxxxxx A
b0xxxxxxxx ]
b0xxxxxxxx h
b0xxxxxxxx o
04
12
b11 v
16
#1300
06
#1350
b1100100000010 ,
b1100100000010 C
b1100100000010 I
b1100100000010 S
b1100100000010 U
13
02
b0 v
16
#1400
06
#1450
b0xxxxxxxx #
b0xxxxxxxx :
b0xxxxxxxx O
b0xxxxxxxx `
b10 .
b10 E
b10 K
b10 M
b11 /
b11 F
b11 J
b11 L
03
15
b1 v
16
#1500
06
#1550
b100 -
b100 D
b100 P
b100 R
b100 T
b10 !
b10 8
b10 Q
b10 m
05
14
b10 v
16
#1600
06
#1650
b10 *
b10 A
b10 ]
b10 h
b10 o
04
12
b11 v
16
#1700
06
#1750
b1 a
b0 V
b100000100000 ,
b100000100000 C
b100000100000 I
b100000100000 S
b100000100000 U
13
02
b0 v
16
#1800
06
#1850
b100000 .
b100000 E
b100000 K
b100000 M
b1 /
b1 F
b1 J
b1 L
b0 1
b0 H
b0 _
b0 l
b1 #
b1 :
b1 O
b1 `
b1 0
b1 G
b1 j
b10 "
b10 9
b10 N
b10 k
03
15
b1 v
16
#1900
06
#1950
b101 -
b101 D
b101 P
b101 R
b101 T
b11 !
b11 8
b11 Q
b11 m
05
14
b10 v
16
#2000
06
#2050
b11 +
b11 B
b11 ^
b11 i
b11 n
04
12
b11 v
16
#2100
06
#2150
bx a
bx V
bx ,
bx C
bx I
bx S
bx U
13
02
b0 v
16
#2200
06
#2250
bx 0
bx G
bx j
b0xxxxxxxxxxxxxxx "
b0xxxxxxxxxxxxxxx 9
b0xxxxxxxxxxxxxxx N
b0xxxxxxxxxxxxxxx k
bx 1
bx H
bx _
bx l
b0xxxxxxxxxxxxxxx #
b0xxxxxxxxxxxxxxx :
b0xxxxxxxxxxxxxxx O
b0xxxxxxxxxxxxxxx `
bx .
bx E
bx K
bx M
bx /
bx F
bx J
bx L
03
15
b1 v
16
#2300
06
#2350
05
14
b10 v
16
#2400
06
#2450
bx *
bx A
bx ]
bx h
bx o
bx +
bx B
bx ^
bx i
bx n
04
12
b11 v
16
#2500
06
#2550
13
02
b0 v
16
#2600
06
#2650
03
15
b1 v
16
#2700
06
